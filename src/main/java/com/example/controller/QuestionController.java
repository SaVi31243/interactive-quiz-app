package com.example.controller;

import com.example.dto.QuestionDto;
import com.example.model.Question;
import com.example.model.Test;
import com.example.repository.TestRepository;
import com.example.service.QuestionService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/questions")
public class QuestionController {

    @Autowired
    private QuestionService questionService;

    @Autowired
    private TestRepository testRepository;

    // üü¢ 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∏—Ç–∞–Ω–Ω—è –∑ testId
    @PostMapping
    public ResponseEntity<Question> createQuestion(@RequestBody QuestionDto dto) {
        Test test = testRepository.findById(dto.testId)
                .orElseThrow(() -> new IllegalArgumentException("–¢–µ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ ID: " + dto.testId));

        Question question = new Question();
        question.setText(dto.text);
        question.setOptions(dto.options);
        question.setCorrectAnswer(dto.correctAnswer);
        question.setTest(test);
        question.setTest(testRepository.findById(dto.testId).orElseThrow());

        Question saved = questionService.save(question);
        return ResponseEntity.ok(saved);
    }

    // üü¢ 2. –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–∏—Ç–∞–Ω—å –ø–æ testId
    @GetMapping("/by-test/{testId}")
    public ResponseEntity<List<Question>> getByTestId(@PathVariable Long testId) {
        List<Question> questions = questionService.findByTestId(testId);
        return ResponseEntity.ok(questions);
    }

    // üü¢ 3. –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–¥–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è –ø–æ –π–æ–≥–æ id (–¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ)
    @GetMapping("/{id}")
    public ResponseEntity<Question> getQuestionById(@PathVariable Long id) {
        Question question = questionService.getById(id);
        return ResponseEntity.ok(question);
    }
}